// SPDX-FileCopyrightText: (C) 2025 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        (unknown)
// source: ensim/v1/ensim.proto

package ensimv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Change event type
type EventType int32

const (
	// NONE indicates this response represents a pre-existing entity
	EventType_EVENT_TYPE_UNSPECIFIED EventType = 0
	// CREATED indicates a new entity was created
	EventType_EVENT_TYPE_CREATED EventType = 1
	// UPDATED indicates an existing entity was updated
	EventType_EVENT_TYPE_UPDATED EventType = 2
	// DELETED indicates an entity was deleted
	EventType_EVENT_TYPE_DELETED EventType = 3
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "EVENT_TYPE_UNSPECIFIED",
		1: "EVENT_TYPE_CREATED",
		2: "EVENT_TYPE_UPDATED",
		3: "EVENT_TYPE_DELETED",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNSPECIFIED": 0,
		"EVENT_TYPE_CREATED":     1,
		"EVENT_TYPE_UPDATED":     2,
		"EVENT_TYPE_DELETED":     3,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_ensim_v1_ensim_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_ensim_v1_ensim_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{0}
}

// StatusSource represents the source of the status
// i.e., where the status was generated from in the simulated edge node
type StatusSource int32

const (
	StatusSource_STATUS_SOURCE_UNSPECIFIED     StatusSource = 0
	StatusSource_STATUS_SOURCE_ONBOARDED       StatusSource = 1
	StatusSource_STATUS_SOURCE_PROVISIONED     StatusSource = 2
	StatusSource_STATUS_SOURCE_REQUIREMENTS    StatusSource = 3
	StatusSource_STATUS_SOURCE_CREDENTIALS     StatusSource = 4
	StatusSource_STATUS_SOURCE_SETUP           StatusSource = 5
	StatusSource_STATUS_SOURCE_TEARDOWN        StatusSource = 6
	StatusSource_STATUS_SOURCE_NODE_AGENT      StatusSource = 7
	StatusSource_STATUS_SOURCE_UPDATE_AGENT    StatusSource = 8
	StatusSource_STATUS_SOURCE_HD_AGENT        StatusSource = 9
	StatusSource_STATUS_SOURCE_TELEMETRY_AGENT StatusSource = 10
	StatusSource_STATUS_SOURCE_TOKEN_MANAGER   StatusSource = 11
)

// Enum value maps for StatusSource.
var (
	StatusSource_name = map[int32]string{
		0:  "STATUS_SOURCE_UNSPECIFIED",
		1:  "STATUS_SOURCE_ONBOARDED",
		2:  "STATUS_SOURCE_PROVISIONED",
		3:  "STATUS_SOURCE_REQUIREMENTS",
		4:  "STATUS_SOURCE_CREDENTIALS",
		5:  "STATUS_SOURCE_SETUP",
		6:  "STATUS_SOURCE_TEARDOWN",
		7:  "STATUS_SOURCE_NODE_AGENT",
		8:  "STATUS_SOURCE_UPDATE_AGENT",
		9:  "STATUS_SOURCE_HD_AGENT",
		10: "STATUS_SOURCE_TELEMETRY_AGENT",
		11: "STATUS_SOURCE_TOKEN_MANAGER",
	}
	StatusSource_value = map[string]int32{
		"STATUS_SOURCE_UNSPECIFIED":     0,
		"STATUS_SOURCE_ONBOARDED":       1,
		"STATUS_SOURCE_PROVISIONED":     2,
		"STATUS_SOURCE_REQUIREMENTS":    3,
		"STATUS_SOURCE_CREDENTIALS":     4,
		"STATUS_SOURCE_SETUP":           5,
		"STATUS_SOURCE_TEARDOWN":        6,
		"STATUS_SOURCE_NODE_AGENT":      7,
		"STATUS_SOURCE_UPDATE_AGENT":    8,
		"STATUS_SOURCE_HD_AGENT":        9,
		"STATUS_SOURCE_TELEMETRY_AGENT": 10,
		"STATUS_SOURCE_TOKEN_MANAGER":   11,
	}
)

func (x StatusSource) Enum() *StatusSource {
	p := new(StatusSource)
	*p = x
	return p
}

func (x StatusSource) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusSource) Descriptor() protoreflect.EnumDescriptor {
	return file_ensim_v1_ensim_proto_enumTypes[1].Descriptor()
}

func (StatusSource) Type() protoreflect.EnumType {
	return &file_ensim_v1_ensim_proto_enumTypes[1]
}

func (x StatusSource) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusSource.Descriptor instead.
func (StatusSource) EnumDescriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{1}
}

// StatusSource represents the value of the status for a given StatusSource
type StatusMode int32

const (
	StatusMode_STATUS_MODE_UNSPECIFIED StatusMode = 0
	StatusMode_STATUS_MODE_OK          StatusMode = 1
	StatusMode_STATUS_MODE_FAILED      StatusMode = 2
)

// Enum value maps for StatusMode.
var (
	StatusMode_name = map[int32]string{
		0: "STATUS_MODE_UNSPECIFIED",
		1: "STATUS_MODE_OK",
		2: "STATUS_MODE_FAILED",
	}
	StatusMode_value = map[string]int32{
		"STATUS_MODE_UNSPECIFIED": 0,
		"STATUS_MODE_OK":          1,
		"STATUS_MODE_FAILED":      2,
	}
)

func (x StatusMode) Enum() *StatusMode {
	p := new(StatusMode)
	*p = x
	return p
}

func (x StatusMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusMode) Descriptor() protoreflect.EnumDescriptor {
	return file_ensim_v1_ensim_proto_enumTypes[2].Descriptor()
}

func (StatusMode) Type() protoreflect.EnumType {
	return &file_ensim_v1_ensim_proto_enumTypes[2]
}

func (x StatusMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use StatusMode.Descriptor instead.
func (StatusMode) EnumDescriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{2}
}

type AgentType int32

const (
	AgentType_AGENT_TYPE_UNSPECIFIED AgentType = 0
	AgentType_AGENT_TYPE_NODE        AgentType = 1
	AgentType_AGENT_TYPE_UPDATE      AgentType = 2
	AgentType_AGENT_TYPE_HD          AgentType = 3
	AgentType_AGENT_TYPE_TELEMETRY   AgentType = 4
)

// Enum value maps for AgentType.
var (
	AgentType_name = map[int32]string{
		0: "AGENT_TYPE_UNSPECIFIED",
		1: "AGENT_TYPE_NODE",
		2: "AGENT_TYPE_UPDATE",
		3: "AGENT_TYPE_HD",
		4: "AGENT_TYPE_TELEMETRY",
	}
	AgentType_value = map[string]int32{
		"AGENT_TYPE_UNSPECIFIED": 0,
		"AGENT_TYPE_NODE":        1,
		"AGENT_TYPE_UPDATE":      2,
		"AGENT_TYPE_HD":          3,
		"AGENT_TYPE_TELEMETRY":   4,
	}
)

func (x AgentType) Enum() *AgentType {
	p := new(AgentType)
	*p = x
	return p
}

func (x AgentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentType) Descriptor() protoreflect.EnumDescriptor {
	return file_ensim_v1_ensim_proto_enumTypes[3].Descriptor()
}

func (AgentType) Type() protoreflect.EnumType {
	return &file_ensim_v1_ensim_proto_enumTypes[3]
}

func (x AgentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentType.Descriptor instead.
func (AgentType) EnumDescriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{3}
}

type AgentState int32

const (
	AgentState_AGENT_STATE_UNSPECIFIED AgentState = 0
	AgentState_AGENT_STATE_OFF         AgentState = 1
	AgentState_AGENT_STATE_ON          AgentState = 2
)

// Enum value maps for AgentState.
var (
	AgentState_name = map[int32]string{
		0: "AGENT_STATE_UNSPECIFIED",
		1: "AGENT_STATE_OFF",
		2: "AGENT_STATE_ON",
	}
	AgentState_value = map[string]int32{
		"AGENT_STATE_UNSPECIFIED": 0,
		"AGENT_STATE_OFF":         1,
		"AGENT_STATE_ON":          2,
	}
)

func (x AgentState) Enum() *AgentState {
	p := new(AgentState)
	*p = x
	return p
}

func (x AgentState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentState) Descriptor() protoreflect.EnumDescriptor {
	return file_ensim_v1_ensim_proto_enumTypes[4].Descriptor()
}

func (AgentState) Type() protoreflect.EnumType {
	return &file_ensim_v1_ensim_proto_enumTypes[4]
}

func (x AgentState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentState.Descriptor instead.
func (AgentState) EnumDescriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{4}
}

// NodeStatus represents one of the status of the simulated edge node
type NodeStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source  StatusSource `protobuf:"varint,1,opt,name=source,proto3,enum=ensim.v1.StatusSource" json:"source,omitempty"`
	Mode    StatusMode   `protobuf:"varint,2,opt,name=mode,proto3,enum=ensim.v1.StatusMode" json:"mode,omitempty"`
	Details string       `protobuf:"bytes,3,opt,name=details,proto3" json:"details,omitempty"`
}

func (x *NodeStatus) Reset() {
	*x = NodeStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeStatus) ProtoMessage() {}

func (x *NodeStatus) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeStatus.ProtoReflect.Descriptor instead.
func (*NodeStatus) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{0}
}

func (x *NodeStatus) GetSource() StatusSource {
	if x != nil {
		return x.Source
	}
	return StatusSource_STATUS_SOURCE_UNSPECIFIED
}

func (x *NodeStatus) GetMode() StatusMode {
	if x != nil {
		return x.Mode
	}
	return StatusMode_STATUS_MODE_UNSPECIFIED
}

func (x *NodeStatus) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

// AgentStatus represents the status of agents in the simulated edge node
type AgentsStates struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DesiredState AgentState `protobuf:"varint,1,opt,name=desired_state,json=desiredState,proto3,enum=ensim.v1.AgentState" json:"desired_state,omitempty"`
	CurrentState AgentState `protobuf:"varint,2,opt,name=current_state,json=currentState,proto3,enum=ensim.v1.AgentState" json:"current_state,omitempty"`
	AgentType    AgentType  `protobuf:"varint,3,opt,name=agent_type,json=agentType,proto3,enum=ensim.v1.AgentType" json:"agent_type,omitempty"`
}

func (x *AgentsStates) Reset() {
	*x = AgentsStates{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AgentsStates) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentsStates) ProtoMessage() {}

func (x *AgentsStates) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentsStates.ProtoReflect.Descriptor instead.
func (*AgentsStates) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{1}
}

func (x *AgentsStates) GetDesiredState() AgentState {
	if x != nil {
		return x.DesiredState
	}
	return AgentState_AGENT_STATE_UNSPECIFIED
}

func (x *AgentsStates) GetCurrentState() AgentState {
	if x != nil {
		return x.CurrentState
	}
	return AgentState_AGENT_STATE_UNSPECIFIED
}

func (x *AgentsStates) GetAgentType() AgentType {
	if x != nil {
		return x.AgentType
	}
	return AgentType_AGENT_TYPE_UNSPECIFIED
}

// NodeCredentials define all the credentials needed to simulate an edge node
// I.e., enable the edge node to communicate with the orchestrator.
type NodeCredentials struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Project ID to be associated to the edge node.
	ProjectId string `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	// Username to retrieve the project_id JWT token.
	// This user must be added to keycloak, be part of the project_id and have the correct roles.
	// Among them be part of the following keycloak group:
	// "${proj_uuid}_Edge-Onboarding-Group"
	OnboardUsername string `protobuf:"bytes,2,opt,name=onboard_username,json=onboardUsername,proto3" json:"onboard_username,omitempty"`
	// Password associated to username.
	OnboardPassword string `protobuf:"bytes,3,opt,name=onboard_password,json=onboardPassword,proto3" json:"onboard_password,omitempty"`
	// Username to retrieve the project_id JWT token.
	// This user must be added to keycloak, be part of the project_id and have the correct roles.
	// Among them be part of the following keycloak group:
	//
	//	"${proj_uuid}_Host-Manager-Group"
	ApiUsername string `protobuf:"bytes,4,opt,name=api_username,json=apiUsername,proto3" json:"api_username,omitempty"`
	// Password associated to username.
	ApiPassword string `protobuf:"bytes,5,opt,name=api_password,json=apiPassword,proto3" json:"api_password,omitempty"`
}

func (x *NodeCredentials) Reset() {
	*x = NodeCredentials{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NodeCredentials) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeCredentials) ProtoMessage() {}

func (x *NodeCredentials) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeCredentials.ProtoReflect.Descriptor instead.
func (*NodeCredentials) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{2}
}

func (x *NodeCredentials) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *NodeCredentials) GetOnboardUsername() string {
	if x != nil {
		return x.OnboardUsername
	}
	return ""
}

func (x *NodeCredentials) GetOnboardPassword() string {
	if x != nil {
		return x.OnboardPassword
	}
	return ""
}

func (x *NodeCredentials) GetApiUsername() string {
	if x != nil {
		return x.ApiUsername
	}
	return ""
}

func (x *NodeCredentials) GetApiPassword() string {
	if x != nil {
		return x.ApiPassword
	}
	return ""
}

// Node represents a simulated edge node
type Node struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The node uuid
	Uuid        string           `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Credentials *NodeCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// The status of each one of the StatusSource for the simulated edge node
	Status []*NodeStatus `protobuf:"bytes,3,rep,name=status,proto3" json:"status,omitempty"`
	// The state of each one of the AgentType for the simulated edge node
	AgentsStates []*AgentsStates `protobuf:"bytes,4,rep,name=agents_states,json=agentsStates,proto3" json:"agents_states,omitempty"`
	// Check if the node is enabled to use NIO (Non-Interactive Onboarding)
	EnableNio bool `protobuf:"varint,5,opt,name=enable_nio,json=enableNio,proto3" json:"enable_nio,omitempty"`
	// Check if the node is enabled to perform teardown,
	// i.e., remove the node from the orchestrator via Infrastructure Manager REST API.
	EnableTeardown bool `protobuf:"varint,6,opt,name=enable_teardown,json=enableTeardown,proto3" json:"enable_teardown,omitempty"`
}

func (x *Node) Reset() {
	*x = Node{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{3}
}

func (x *Node) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *Node) GetCredentials() *NodeCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *Node) GetStatus() []*NodeStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *Node) GetAgentsStates() []*AgentsStates {
	if x != nil {
		return x.AgentsStates
	}
	return nil
}

func (x *Node) GetEnableNio() bool {
	if x != nil {
		return x.EnableNio
	}
	return false
}

func (x *Node) GetEnableTeardown() bool {
	if x != nil {
		return x.EnableTeardown
	}
	return false
}

// CreateNodeRequest create a node request
type CreateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// UUID to be used by new node, optional.
	Uuid        string           `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Credentials *NodeCredentials `protobuf:"bytes,2,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Check if the node is enabled to use NIO (Non-Interactive Onboarding)
	EnableNio bool `protobuf:"varint,5,opt,name=enable_nio,json=enableNio,proto3" json:"enable_nio,omitempty"`
	// Check if the node is enabled to perform teardown,
	// i.e., remove the node from the orchestrator via Infrastructure Manager REST API.
	EnableTeardown bool `protobuf:"varint,6,opt,name=enable_teardown,json=enableTeardown,proto3" json:"enable_teardown,omitempty"`
}

func (x *CreateNodeRequest) Reset() {
	*x = CreateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeRequest) ProtoMessage() {}

func (x *CreateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeRequest.ProtoReflect.Descriptor instead.
func (*CreateNodeRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{4}
}

func (x *CreateNodeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *CreateNodeRequest) GetCredentials() *NodeCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *CreateNodeRequest) GetEnableNio() bool {
	if x != nil {
		return x.EnableNio
	}
	return false
}

func (x *CreateNodeRequest) GetEnableTeardown() bool {
	if x != nil {
		return x.EnableTeardown
	}
	return false
}

// CreateNodeResponse create a node response
type CreateNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateNodeResponse) Reset() {
	*x = CreateNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodeResponse) ProtoMessage() {}

func (x *CreateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodeResponse.ProtoReflect.Descriptor instead.
func (*CreateNodeResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{5}
}

// CreateNodesRequest create nodes request
type CreateNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of nodes to be created
	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
	// Total number of nodes to be created in parallel
	BatchSize uint32 `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	// The credentials associated to the edge nodes
	Credentials *NodeCredentials `protobuf:"bytes,3,opt,name=credentials,proto3" json:"credentials,omitempty"`
	// Check if the node is enabled to use NIO (Non-Interactive Onboarding)
	EnableNio bool `protobuf:"varint,5,opt,name=enable_nio,json=enableNio,proto3" json:"enable_nio,omitempty"`
	// Check if the node is enabled to perform teardown,
	// i.e., remove the node from the orchestrator via Infrastructure Manager REST API.
	EnableTeardown bool `protobuf:"varint,6,opt,name=enable_teardown,json=enableTeardown,proto3" json:"enable_teardown,omitempty"`
}

func (x *CreateNodesRequest) Reset() {
	*x = CreateNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodesRequest) ProtoMessage() {}

func (x *CreateNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodesRequest.ProtoReflect.Descriptor instead.
func (*CreateNodesRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNodesRequest) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CreateNodesRequest) GetBatchSize() uint32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *CreateNodesRequest) GetCredentials() *NodeCredentials {
	if x != nil {
		return x.Credentials
	}
	return nil
}

func (x *CreateNodesRequest) GetEnableNio() bool {
	if x != nil {
		return x.EnableNio
	}
	return false
}

func (x *CreateNodesRequest) GetEnableTeardown() bool {
	if x != nil {
		return x.EnableTeardown
	}
	return false
}

// CreateNodesResponse create nodes response
type CreateNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*Node `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
}

func (x *CreateNodesResponse) Reset() {
	*x = CreateNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNodesResponse) ProtoMessage() {}

func (x *CreateNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNodesResponse.ProtoReflect.Descriptor instead.
func (*CreateNodesResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

// GetNodeRequest get a node request
type GetNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *GetNodeRequest) Reset() {
	*x = GetNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeRequest) ProtoMessage() {}

func (x *GetNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeRequest.ProtoReflect.Descriptor instead.
func (*GetNodeRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{8}
}

func (x *GetNodeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// GetNodeResponse get a node response
type GetNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *GetNodeResponse) Reset() {
	*x = GetNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeResponse) ProtoMessage() {}

func (x *GetNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeResponse.ProtoReflect.Descriptor instead.
func (*GetNodeResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{9}
}

func (x *GetNodeResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// UpdateNodeRequest update a node request
type UpdateNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *UpdateNodeRequest) Reset() {
	*x = UpdateNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeRequest) ProtoMessage() {}

func (x *UpdateNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateNodeRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateNodeRequest) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// UpdateNodeResponse update a node response
type UpdateNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateNodeResponse) Reset() {
	*x = UpdateNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateNodeResponse) ProtoMessage() {}

func (x *UpdateNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateNodeResponse.ProtoReflect.Descriptor instead.
func (*UpdateNodeResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{11}
}

// DeleteNodeRequest delete a node request
type DeleteNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
}

func (x *DeleteNodeRequest) Reset() {
	*x = DeleteNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeRequest) ProtoMessage() {}

func (x *DeleteNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeRequest.ProtoReflect.Descriptor instead.
func (*DeleteNodeRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteNodeRequest) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

// DeleteNodeResponse delete a node response
type DeleteNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNodeResponse) Reset() {
	*x = DeleteNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodeResponse) ProtoMessage() {}

func (x *DeleteNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodeResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodeResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{13}
}

// DeleteNodesRequest delete nodes request
type DeleteNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Total number of nodes to be deleted
	Number uint32 `protobuf:"varint,1,opt,name=number,proto3" json:"number,omitempty"`
}

func (x *DeleteNodesRequest) Reset() {
	*x = DeleteNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodesRequest) ProtoMessage() {}

func (x *DeleteNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodesRequest.ProtoReflect.Descriptor instead.
func (*DeleteNodesRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteNodesRequest) GetNumber() uint32 {
	if x != nil {
		return x.Number
	}
	return 0
}

// DeleteNodesResponse delete nodes response
type DeleteNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNodesResponse) Reset() {
	*x = DeleteNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNodesResponse) ProtoMessage() {}

func (x *DeleteNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNodesResponse.ProtoReflect.Descriptor instead.
func (*DeleteNodesResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{15}
}

// ListNodesRequest list nodes request
type ListNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListNodesRequest) Reset() {
	*x = ListNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesRequest) ProtoMessage() {}

func (x *ListNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesRequest.ProtoReflect.Descriptor instead.
func (*ListNodesRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{16}
}

// ListNodesResponse list nodes response
type ListNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
}

func (x *ListNodesResponse) Reset() {
	*x = ListNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNodesResponse) ProtoMessage() {}

func (x *ListNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNodesResponse.ProtoReflect.Descriptor instead.
func (*ListNodesResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{17}
}

func (x *ListNodesResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

// WatchNodesRequest watch nodes request
type WatchNodesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NoReplay    bool `protobuf:"varint,1,opt,name=no_replay,json=noReplay,proto3" json:"no_replay,omitempty"`
	NoSubscribe bool `protobuf:"varint,2,opt,name=no_subscribe,json=noSubscribe,proto3" json:"no_subscribe,omitempty"`
}

func (x *WatchNodesRequest) Reset() {
	*x = WatchNodesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNodesRequest) ProtoMessage() {}

func (x *WatchNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNodesRequest.ProtoReflect.Descriptor instead.
func (*WatchNodesRequest) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{18}
}

func (x *WatchNodesRequest) GetNoReplay() bool {
	if x != nil {
		return x.NoReplay
	}
	return false
}

func (x *WatchNodesRequest) GetNoSubscribe() bool {
	if x != nil {
		return x.NoSubscribe
	}
	return false
}

// WatchNodesResponse watch nodes response
type WatchNodesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Node *Node     `protobuf:"bytes,1,opt,name=node,proto3" json:"node,omitempty"`
	Type EventType `protobuf:"varint,2,opt,name=type,proto3,enum=ensim.v1.EventType" json:"type,omitempty"`
}

func (x *WatchNodesResponse) Reset() {
	*x = WatchNodesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ensim_v1_ensim_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WatchNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchNodesResponse) ProtoMessage() {}

func (x *WatchNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ensim_v1_ensim_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchNodesResponse.ProtoReflect.Descriptor instead.
func (*WatchNodesResponse) Descriptor() ([]byte, []int) {
	return file_ensim_v1_ensim_proto_rawDescGZIP(), []int{19}
}

func (x *WatchNodesResponse) GetNode() *Node {
	if x != nil {
		return x.Node
	}
	return nil
}

func (x *WatchNodesResponse) GetType() EventType {
	if x != nil {
		return x.Type
	}
	return EventType_EVENT_TYPE_UNSPECIFIED
}

var File_ensim_v1_ensim_proto protoreflect.FileDescriptor

var file_ensim_v1_ensim_proto_rawDesc = []byte{
	0x0a, 0x14, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x73, 0x69, 0x6d,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f,
	0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80,
	0x01, 0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e,
	0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x6e,
	0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0xbd, 0x01, 0x0a, 0x0c, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x73, 0x12, 0x39, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a,
	0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xf9, 0x01, 0x0a, 0x0f, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x64, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x73, 0x12, 0x2a, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01,
	0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x10, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x5f,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06,
	0xba, 0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0f, 0x6f, 0x6e, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x50,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x29, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba,
	0x48, 0x03, 0xc8, 0x01, 0x01, 0x52, 0x0b, 0x61, 0x70, 0x69, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x29, 0x0a, 0x0c, 0x61, 0x70, 0x69, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8, 0x01, 0x01,
	0x52, 0x0b, 0x61, 0x70, 0x69, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa6, 0x02,
	0x0a, 0x04, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01,
	0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x65,
	0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43, 0x72, 0x65, 0x64,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x4e, 0x6f, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x52, 0x0c, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e,
	0x69, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x09, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x69, 0x6f, 0x12, 0x2c, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x42, 0x03, 0xe0, 0x41, 0x03, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x65,
	0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xba, 0x48, 0x05, 0x72,
	0x03, 0xb0, 0x01, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x43, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x43,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03, 0xc8,
	0x01, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x69, 0x6f, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x69, 0x6f, 0x12, 0x27,
	0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x54,
	0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x14, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xd8, 0x01,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x74, 0x63, 0x68, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x62, 0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x43, 0x0a, 0x0b, 0x63,
	0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73, 0x42, 0x06, 0xba, 0x48, 0x03,
	0xc8, 0x01, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x69, 0x6f, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x69, 0x6f, 0x12,
	0x27, 0x0a, 0x0f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x65, 0x61, 0x72, 0x64, 0x6f,
	0x77, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x54, 0x65, 0x61, 0x72, 0x64, 0x6f, 0x77, 0x6e, 0x22, 0x3b, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x24, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x05,
	0x6e, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x31, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0,
	0x01, 0x01, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22,
	0x37, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x34,
	0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0b, 0xba, 0x48, 0x08, 0xc8, 0x01, 0x01, 0x72, 0x03, 0xb0, 0x01, 0x01, 0x52, 0x04,
	0x75, 0x75, 0x69, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2c, 0x0a, 0x12, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x37, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x22, 0x53, 0x0a, 0x11,
	0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6e, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x6e, 0x6f, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x6e, 0x6f, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x22, 0x61, 0x0a, 0x12, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x2a, 0x6f, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x16, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x16, 0x0a,
	0x12, 0x45, 0x56, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x45, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x2a, 0xfb, 0x02, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53,
	0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4f, 0x4e, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x45, 0x44,
	0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49, 0x53, 0x49, 0x4f, 0x4e, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x49, 0x52, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x53, 0x10,
	0x03, 0x12, 0x1d, 0x0a, 0x19, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x52,
	0x43, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x53, 0x10, 0x04,
	0x12, 0x17, 0x0a, 0x13, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43,
	0x45, 0x5f, 0x53, 0x45, 0x54, 0x55, 0x50, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x54, 0x45, 0x41, 0x52, 0x44,
	0x4f, 0x57, 0x4e, 0x10, 0x06, 0x12, 0x1c, 0x0a, 0x18, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x10, 0x07, 0x12, 0x1e, 0x0a, 0x1a, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x5f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x10, 0x08, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f,
	0x55, 0x52, 0x43, 0x45, 0x5f, 0x48, 0x44, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12,
	0x21, 0x0a, 0x1d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45,
	0x5f, 0x54, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x47, 0x45, 0x4e, 0x54,
	0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x4f, 0x55,
	0x52, 0x43, 0x45, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x4d, 0x41, 0x4e, 0x41, 0x47, 0x45,
	0x52, 0x10, 0x0b, 0x2a, 0x55, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x45, 0x5f, 0x4f, 0x4b,
	0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x4d, 0x4f, 0x44,
	0x45, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x2a, 0x80, 0x01, 0x0a, 0x09, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x44, 0x45, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x41, 0x47, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48,
	0x44, 0x10, 0x03, 0x12, 0x18, 0x0a, 0x14, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x54, 0x45, 0x4c, 0x45, 0x4d, 0x45, 0x54, 0x52, 0x59, 0x10, 0x04, 0x2a, 0x52, 0x0a,
	0x0a, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x41,
	0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x41, 0x47, 0x45, 0x4e,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x46, 0x46, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x4f, 0x4e, 0x10,
	0x02, 0x32, 0xdc, 0x04, 0x0a, 0x14, 0x45, 0x64, 0x67, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a, 0x0b, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3e, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x2e, 0x65, 0x6e, 0x73,
	0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x47, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e,
	0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x73,
	0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x49, 0x0a, 0x0a, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12,
	0x1b, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68,
	0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x65,
	0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x61, 0x74, 0x63, 0x68, 0x4e, 0x6f, 0x64,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12, 0x46, 0x0a, 0x09,
	0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1a, 0x2e, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x30, 0x01, 0x12, 0x4a, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f,
	0x64, 0x65, 0x73, 0x12, 0x1c, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x4a, 0x5a, 0x48, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69,
	0x6e, 0x74, 0x65, 0x6c, 0x2d, 0x74, 0x69, 0x62, 0x65, 0x72, 0x2f, 0x76, 0x69, 0x72, 0x74, 0x75,
	0x61, 0x6c, 0x2d, 0x65, 0x64, 0x67, 0x65, 0x2d, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x65, 0x6e, 0x2d,
	0x73, 0x69, 0x6d, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x73, 0x69,
	0x6d, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x73, 0x69, 0x6d, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ensim_v1_ensim_proto_rawDescOnce sync.Once
	file_ensim_v1_ensim_proto_rawDescData = file_ensim_v1_ensim_proto_rawDesc
)

func file_ensim_v1_ensim_proto_rawDescGZIP() []byte {
	file_ensim_v1_ensim_proto_rawDescOnce.Do(func() {
		file_ensim_v1_ensim_proto_rawDescData = protoimpl.X.CompressGZIP(file_ensim_v1_ensim_proto_rawDescData)
	})
	return file_ensim_v1_ensim_proto_rawDescData
}

var file_ensim_v1_ensim_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_ensim_v1_ensim_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_ensim_v1_ensim_proto_goTypes = []interface{}{
	(EventType)(0),              // 0: ensim.v1.EventType
	(StatusSource)(0),           // 1: ensim.v1.StatusSource
	(StatusMode)(0),             // 2: ensim.v1.StatusMode
	(AgentType)(0),              // 3: ensim.v1.AgentType
	(AgentState)(0),             // 4: ensim.v1.AgentState
	(*NodeStatus)(nil),          // 5: ensim.v1.NodeStatus
	(*AgentsStates)(nil),        // 6: ensim.v1.AgentsStates
	(*NodeCredentials)(nil),     // 7: ensim.v1.NodeCredentials
	(*Node)(nil),                // 8: ensim.v1.Node
	(*CreateNodeRequest)(nil),   // 9: ensim.v1.CreateNodeRequest
	(*CreateNodeResponse)(nil),  // 10: ensim.v1.CreateNodeResponse
	(*CreateNodesRequest)(nil),  // 11: ensim.v1.CreateNodesRequest
	(*CreateNodesResponse)(nil), // 12: ensim.v1.CreateNodesResponse
	(*GetNodeRequest)(nil),      // 13: ensim.v1.GetNodeRequest
	(*GetNodeResponse)(nil),     // 14: ensim.v1.GetNodeResponse
	(*UpdateNodeRequest)(nil),   // 15: ensim.v1.UpdateNodeRequest
	(*UpdateNodeResponse)(nil),  // 16: ensim.v1.UpdateNodeResponse
	(*DeleteNodeRequest)(nil),   // 17: ensim.v1.DeleteNodeRequest
	(*DeleteNodeResponse)(nil),  // 18: ensim.v1.DeleteNodeResponse
	(*DeleteNodesRequest)(nil),  // 19: ensim.v1.DeleteNodesRequest
	(*DeleteNodesResponse)(nil), // 20: ensim.v1.DeleteNodesResponse
	(*ListNodesRequest)(nil),    // 21: ensim.v1.ListNodesRequest
	(*ListNodesResponse)(nil),   // 22: ensim.v1.ListNodesResponse
	(*WatchNodesRequest)(nil),   // 23: ensim.v1.WatchNodesRequest
	(*WatchNodesResponse)(nil),  // 24: ensim.v1.WatchNodesResponse
}
var file_ensim_v1_ensim_proto_depIdxs = []int32{
	1,  // 0: ensim.v1.NodeStatus.source:type_name -> ensim.v1.StatusSource
	2,  // 1: ensim.v1.NodeStatus.mode:type_name -> ensim.v1.StatusMode
	4,  // 2: ensim.v1.AgentsStates.desired_state:type_name -> ensim.v1.AgentState
	4,  // 3: ensim.v1.AgentsStates.current_state:type_name -> ensim.v1.AgentState
	3,  // 4: ensim.v1.AgentsStates.agent_type:type_name -> ensim.v1.AgentType
	7,  // 5: ensim.v1.Node.credentials:type_name -> ensim.v1.NodeCredentials
	5,  // 6: ensim.v1.Node.status:type_name -> ensim.v1.NodeStatus
	6,  // 7: ensim.v1.Node.agents_states:type_name -> ensim.v1.AgentsStates
	7,  // 8: ensim.v1.CreateNodeRequest.credentials:type_name -> ensim.v1.NodeCredentials
	7,  // 9: ensim.v1.CreateNodesRequest.credentials:type_name -> ensim.v1.NodeCredentials
	8,  // 10: ensim.v1.CreateNodesResponse.nodes:type_name -> ensim.v1.Node
	8,  // 11: ensim.v1.GetNodeResponse.node:type_name -> ensim.v1.Node
	8,  // 12: ensim.v1.UpdateNodeRequest.node:type_name -> ensim.v1.Node
	8,  // 13: ensim.v1.ListNodesResponse.node:type_name -> ensim.v1.Node
	8,  // 14: ensim.v1.WatchNodesResponse.node:type_name -> ensim.v1.Node
	0,  // 15: ensim.v1.WatchNodesResponse.type:type_name -> ensim.v1.EventType
	11, // 16: ensim.v1.EdgeNodeModelService.CreateNodes:input_type -> ensim.v1.CreateNodesRequest
	9,  // 17: ensim.v1.EdgeNodeModelService.CreateNode:input_type -> ensim.v1.CreateNodeRequest
	13, // 18: ensim.v1.EdgeNodeModelService.GetNode:input_type -> ensim.v1.GetNodeRequest
	15, // 19: ensim.v1.EdgeNodeModelService.UpdateNode:input_type -> ensim.v1.UpdateNodeRequest
	17, // 20: ensim.v1.EdgeNodeModelService.DeleteNode:input_type -> ensim.v1.DeleteNodeRequest
	23, // 21: ensim.v1.EdgeNodeModelService.WatchNodes:input_type -> ensim.v1.WatchNodesRequest
	21, // 22: ensim.v1.EdgeNodeModelService.ListNodes:input_type -> ensim.v1.ListNodesRequest
	19, // 23: ensim.v1.EdgeNodeModelService.DeleteNodes:input_type -> ensim.v1.DeleteNodesRequest
	12, // 24: ensim.v1.EdgeNodeModelService.CreateNodes:output_type -> ensim.v1.CreateNodesResponse
	10, // 25: ensim.v1.EdgeNodeModelService.CreateNode:output_type -> ensim.v1.CreateNodeResponse
	14, // 26: ensim.v1.EdgeNodeModelService.GetNode:output_type -> ensim.v1.GetNodeResponse
	16, // 27: ensim.v1.EdgeNodeModelService.UpdateNode:output_type -> ensim.v1.UpdateNodeResponse
	18, // 28: ensim.v1.EdgeNodeModelService.DeleteNode:output_type -> ensim.v1.DeleteNodeResponse
	24, // 29: ensim.v1.EdgeNodeModelService.WatchNodes:output_type -> ensim.v1.WatchNodesResponse
	22, // 30: ensim.v1.EdgeNodeModelService.ListNodes:output_type -> ensim.v1.ListNodesResponse
	20, // 31: ensim.v1.EdgeNodeModelService.DeleteNodes:output_type -> ensim.v1.DeleteNodesResponse
	24, // [24:32] is the sub-list for method output_type
	16, // [16:24] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_ensim_v1_ensim_proto_init() }
func file_ensim_v1_ensim_proto_init() {
	if File_ensim_v1_ensim_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ensim_v1_ensim_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AgentsStates); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NodeCredentials); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Node); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNodesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ensim_v1_ensim_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WatchNodesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ensim_v1_ensim_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ensim_v1_ensim_proto_goTypes,
		DependencyIndexes: file_ensim_v1_ensim_proto_depIdxs,
		EnumInfos:         file_ensim_v1_ensim_proto_enumTypes,
		MessageInfos:      file_ensim_v1_ensim_proto_msgTypes,
	}.Build()
	File_ensim_v1_ensim_proto = out.File
	file_ensim_v1_ensim_proto_rawDesc = nil
	file_ensim_v1_ensim_proto_goTypes = nil
	file_ensim_v1_ensim_proto_depIdxs = nil
}
